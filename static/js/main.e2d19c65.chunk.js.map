{"version":3,"sources":["components/InlineNumberInput/InlineNumberInput.jsx","components/SelectInput/SelectInput.jsx","simulation/util.js","simulation/disc.js","simulation/discs.js","components/ThrowInput/ThrowInput.jsx","App.js","reportWebVitals.js","index.js"],"names":["InlineNumberInput","props","id","uniqueId","handleChange","bind","event","this","onChange","target","value","htmlFor","label","type","React","Component","SelectInput","children","interp","x","xp","yp","Array","isArray","map","a","b","length","Disc","name","aoarange","cl","cd","cm","jxy","jz","diam","mass","aoa","aviar","wraith","discs","ThrowInput","state","open","handleDiscChange","handleMassChange","handleSpeedChange","handleSpinChange","handleDirectionChange","handleLaunchAngleChange","handleNoseAngleChange","handleRollAngleChange","setState","disc","t","throw","onThrowChange","speed","spin","direction","launchAngle","noseAngle","rollAngle","className","onClick","toggleOpen","index","App","throws","i","handleThrowChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2d19c65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport uniqueId from \"lodash/uniqueId\";\r\nimport \"./InlineNumberInput.css\";\r\n\r\nexport class InlineNumberInput extends React.Component {\r\n  id;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = uniqueId();\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label htmlFor={this.id}>{this.props.label}</label>\r\n        <input id={this.id} type=\"number\" value={this.props.value} onChange={this.handleChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport uniqueId from \"lodash/uniqueId\";\r\nimport \"./SelectInput.css\";\r\n\r\nexport class SelectInput extends React.Component {\r\n  id;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = uniqueId();\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label htmlFor={this.id}>{this.props.label}</label>\r\n        <select\r\n          id={this.id}\r\n          value={this.props.value}\r\n          onChange={this.handleChange}\r\n        >\r\n          {this.props.children}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\n/**\r\n * Piecewise linear interpolation of the y value at x, given x and y\r\n * coordinates defining points on the piecewise line\r\n * @param {number} x x coordinate to interpolate y value\r\n * @param {Array} xp x coordinates\r\n * @param {Array} yp y coordinates\r\n * @returns {number}\r\n */\r\nexport function interp(x, xp, yp) {\r\n    if (Array.isArray(x)) return x.map(value => interp(value, xp, yp));\r\n    if (x < xp[0]) return yp[0];\r\n    let a = 0, b = 1;\r\n    for (; a < xp.length - 1; a++, b++) {\r\n        if (xp[a + 1] > x) {\r\n            return (yp[a] * (xp[b] - x) + yp[b] * (x - xp[a])) / (xp[b] - xp[a]);\r\n        }\r\n    }\r\n    return yp[yp.length - 1];\r\n}\r\n\r\nexport function vec3(x, y, z) {\r\n    return new THREE.Vector3(x, y, z);\r\n}\r\n\r\nexport function mat3(a1, a2, a3, b1, b2, b3, c1, c2, c3) {\r\n    return new THREE.Matrix3().set(a1, a2, a3, b1, b2, b3, c1, c2, c3);\r\n}","import { interp } from './util';\r\n\r\nexport default class Disc {\r\n    constructor(name) {\r\n      this.name = name;\r\n      this.aoarange = [0]; // Angle of Attact at which the aerodynamic coefficients have been measured. Must be sorted in ascending order\r\n      this.cl = [0]; // Coefficients of lift for each AoA\r\n      this.cd = [0]; // Coefficients of drag for each AoA\r\n      this.cm = [0]; // Coefficients of pitching moment for each AoA\r\n      this.jxy = 0; // Normalized mass moment of inertia about the roll/pitch axis in m^2\r\n      this.jz = 0; // Normalized mass moment of inertia about the spin axis in m^2\r\n      this.diam = 0; // Disc diameter in m\r\n      this.mass = 0; // Mass of disc in kg\r\n    }\r\n    \r\n    getCl(aoa) {\r\n      return interp(aoa, this.aoarange, this.cl);\r\n    }\r\n    \r\n    getCd(aoa) {\r\n      return interp(aoa, this.aoarange, this.cd);\r\n    }\r\n    \r\n    getCm(aoa) {\r\n      return interp(aoa, this.aoarange, this.cm);\r\n    }\r\n  }","import Disc from './disc';\r\n\r\nexport const aviar = new Disc(\"Aviar\");\r\naviar.aoarange = [-1.570796327, -0.5235987756, -0.0872664626, -0.06981317008, -0.05235987756, -0.03490658504, -0.01745329252, 0, 0.01745329252, 0.03490658504, 0.05235987756, 0.06981317008, 0.0872664626, 0.1047197551, 0.1221730476, 0.1396263402, 0.1570796327, 0.1745329252, 0.1919862177, 0.2094395102, 0.2268928028, 0.2443460953, 0.2617993878, 0.7853981634, 0.872664626, 1.570796327];\r\naviar.cl = [0, -1, -0.088, -0.049, -0.009, 0.034, 0.093, 0.154, 0.21, 0.256, 0.304, 0.343, 0.383, 0.426, 0.468, 0.508, 0.549, 0.591, 0.631, 0.672, 0.702, 0.74, 0.78, 1.6, 0.8, 0];\r\naviar.cd = [0.4, 0.188, 0.076, 0.071, 0.07, 0.072, 0.072, 0.084, 0.088, 0.085, 0.102, 0.117, 0.133, 0.141, 0.157, 0.174, 0.189, 0.203, 0.216, 0.226, 0.245, 0.266, 0.281, 0.7, 0.5, 0.6];\r\naviar.cm = [0, -0.08, -0.015, -0.016, -0.011, -0.01, -0.013, -0.018, -0.018, -0.017, -0.014, -0.014, -0.011, -0.008, -0.005, 0, 0.005, 0.009, 0.011, 0.02, 0.024, 0.032, 0.039, 0.23, 0.02, 0];\r\naviar.jxy = 4.23e-3;\r\naviar.jz = 8.46e-3;\r\naviar.diam = 0.21;\r\n\r\nexport const wraith = new Disc(\"Wraith\");\r\nwraith.aoarange = [-1.570796327, -0.5235987756, -0.0872664626, -0.06981317008, -0.05235987756, -0.03490658504, -0.01745329252, 0, 0.01745329252, 0.03490658504, 0.05235987756, 0.06981317008, 0.0872664626, 0.1047197551, 0.1221730476, 0.1396263402, 0.1570796327, 0.1745329252, 0.1919862177, 0.2094395102, 0.2268928028, 0.2443460953, 0.2617993878, 0.7853981634, 0.872664626, 1.570796327];\r\nwraith.cl = [0, -1, -0.088, -0.049, -0.009, 0.034, 0.093, 0.154, 0.21, 0.256, 0.304, 0.343, 0.383, 0.426, 0.468, 0.508, 0.549, 0.591, 0.631, 0.672, 0.702, 0.74, 0.78, 1.6, 0.8, 0];\r\nwraith.cd = [0.4, 0.188, 0.076, 0.071, 0.07, 0.072, 0.072, 0.084, 0.088, 0.085, 0.102, 0.117, 0.133, 0.141, 0.157, 0.174, 0.189, 0.203, 0.216, 0.226, 0.245, 0.266, 0.281, 0.7, 0.5, 0.6];\r\nwraith.cm = [0, -0.08, -0.015, -0.016, -0.011, -0.01, -0.013, -0.018, -0.018, -0.017, -0.014, -0.014, -0.011, -0.008, -0.005, 0, 0.005, 0.009, 0.011, 0.02, 0.024, 0.032, 0.039, 0.23, 0.02, 0];\r\nwraith.jxy = 4.23e-3;\r\nwraith.jz = 8.46e-3;\r\nwraith.diam = 0.21;\r\n\r\nexport const discs = [aviar, wraith];","import React from \"react\";\r\nimport { InlineNumberInput } from \"../InlineNumberInput/InlineNumberInput\";\r\nimport { SelectInput } from \"../SelectInput/SelectInput\";\r\nimport { discs } from \"../../simulation/discs\";\r\nimport \"./ThrowInput.css\";\r\n\r\nexport class ThrowInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    };\r\n\r\n    this.handleDiscChange = this.handleDiscChange.bind(this);\r\n    this.handleMassChange = this.handleMassChange.bind(this);\r\n    this.handleSpeedChange = this.handleSpeedChange.bind(this);\r\n    this.handleSpinChange = this.handleSpinChange.bind(this);\r\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\r\n    this.handleLaunchAngleChange = this.handleLaunchAngleChange.bind(this);\r\n    this.handleNoseAngleChange = this.handleNoseAngleChange.bind(this);\r\n    this.handleRollAngleChange = this.handleRollAngleChange.bind(this);\r\n  }\r\n\r\n  toggleOpen() {\r\n    const open = this.state.open;\r\n    this.setState({\r\n      open: !open,\r\n    });\r\n  }\r\n\r\n  handleDiscChange(disc) {\r\n    let t = this.props.throw;\r\n    t.disc = disc;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleMassChange(mass) {\r\n    let t = this.props.throw;\r\n    t.mass = mass;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleSpeedChange(speed) {\r\n    let t = this.props.throw;\r\n    t.speed = speed;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleSpinChange(spin) {\r\n    let t = this.props.throw;\r\n    t.spin = spin;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleDirectionChange(direction) {\r\n    let t = this.props.throw;\r\n    t.direction = direction;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleLaunchAngleChange(launchAngle) {\r\n    let t = this.props.throw;\r\n    t.launchAngle = launchAngle;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleNoseAngleChange(noseAngle) {\r\n    let t = this.props.throw;\r\n    t.noseAngle = noseAngle;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  handleRollAngleChange(rollAngle) {\r\n    let t = this.props.throw;\r\n    t.rollAngle = rollAngle;\r\n    this.props.onThrowChange(t);\r\n  }\r\n\r\n  render() {\r\n    const t = this.props.throw;\r\n    return (\r\n      <div className=\"container\">\r\n        <header onClick={() => this.toggleOpen()}>\r\n          <span className=\"heading\">{discs[t.disc].name}</span>\r\n        </header>\r\n\r\n        {this.state.open && (\r\n          <div className=\"inputs\">\r\n            <SelectInput\r\n              label=\"Disc\"\r\n              value={t.disc}\r\n              onChange={this.handleDiscChange}\r\n            >\r\n              {discs.map((disc, index) => (\r\n                <option value={index}>{disc.name}</option>\r\n              ))}\r\n            </SelectInput>\r\n            <InlineNumberInput\r\n              label=\"Mass (g)\"\r\n              value={t.mass}\r\n              onChange={this.handleMassChange}\r\n            />\r\n            <InlineNumberInput\r\n              label=\"Speed (mph)\"\r\n              value={t.speed}\r\n              onChange={this.handleSpeedChange}\r\n            />\r\n            <InlineNumberInput\r\n              label=\"Spin (rev/s)\"\r\n              value={t.spin}\r\n              onChange={this.handleSpinChange}\r\n            />\r\n            <SelectInput\r\n              label=\"Dir.\"\r\n              value={t.direction}\r\n              onChange={this.handleDirectionChange}\r\n            >\r\n              <option value=\"1\">Clockwise (RHBH/LHFH)</option>\r\n              <option value=\"-1\">Anti-Clockwise (LHBH/RHFH)</option>\r\n            </SelectInput>\r\n            <InlineNumberInput\r\n              label=\"Launch Angle (deg)\"\r\n              value={t.launchAngle}\r\n              onChange={this.handleLaunchAngleChange}\r\n            />\r\n            <InlineNumberInput\r\n              label=\"Nose Angle (deg)\"\r\n              value={t.noseAngle}\r\n              onChange={this.handleNoseAngleChange}\r\n            />\r\n            <InlineNumberInput\r\n              label=\"Roll Angle (deg)\"\r\n              value={t.rollAngle}\r\n              onChange={this.handleRollAngleChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThrowInput } from \"./components/ThrowInput/ThrowInput\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      throws: [\n        {\n          disc: 0, // aviar\n          mass: 175,\n          speed: 50,\n          spin: 27,\n          direction: 1,\n          launchAngle: 10,\n          noseAngle: 4,\n          rollAngle: 8,\n        },\n        {\n          disc: 1,\n          mass: 170,\n          speed: 30,\n          spin: 20,\n          direction: 1,\n          launchAngle: 8,\n          noseAngle: 6,\n          rollAngle: 0,\n        },\n      ],\n    };\n  }\n\n  handleThrowChange(index, t) {\n    let throws = [...this.state.throws];\n    throws[index] = t;\n    this.setState({ throws: throws });\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <div className=\"throw-container\">\n          <h2 className=\"throw-header\">Throws</h2>\n\n          <div className=\"throw-list\">\n            {this.state.throws.map((t, i) => (\n              <ThrowInput\n                key={i}\n                throw={t}\n                onThrowChange={this.handleThrowChange.bind(this, i)}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"view-container\">Look at it</div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}